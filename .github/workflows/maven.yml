name: Full-Stack CI/CD with Docker

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

permissions:
  contents: read
  actions: read
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: password
        options: --health-cmd="pg_isready -U postgres" --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Build Backend Docker image
      run: |
        docker-compose -f docker-compose.yml build movie-backend

    - name: Build Frontend Docker image
      run: |
        docker-compose -f docker-compose.yml build movie-frontend

    - name: Push Backend Docker image to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Backend Docker image to Docker Hub
      run: |
        docker-compose -f docker-compose.yml push movie-backend
        docker-compose -f docker-compose.yml push movie-frontend

    - name: Deploy to Server (Optional)
      run: |
        # SSH into your server and deploy the app
        ssh user@server-ip "
          cd /path/to/your/project && \
          docker-compose pull && \
          docker-compose up -d
        "
